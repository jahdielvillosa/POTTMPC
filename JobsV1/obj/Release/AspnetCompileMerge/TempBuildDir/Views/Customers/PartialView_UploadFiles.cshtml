@model JobsV1.Models.CustFiles

@{
    ViewBag.Title = "UploadFile";
    int customerid = Convert.ToInt32(ViewData["customerId"]);

}

    @using (Html.BeginForm("UploadFiles", "CustFiles", new { custid = @ViewBag.custid }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {


        <div class="form-horizontal">
            <h2>UploadFile: @customerid</h2>
           
            <div class="form-group" style="margin-left:10%;">
                <div class="col-md-10">
                    <label for="file">Upload Files:</label><p>Max 4Mb</p>
                    <input type="file" name="file" id="file" />
                </div>
            </div>
            <!-- Fields from custFiles -->

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" >
                @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.Folder, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Folder, new { htmlAttributes = new { @class = "form-control"  } })
                    @Html.ValidationMessageFor(model => model.Folder, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group"  style="display:none;">
                @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;" >
                @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerId, new { htmlAttributes = new { @class = "form-control" ,@id="customerlist" } })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Upload Files" class="btn btn-default" />

                </div>
            </div>
        </div>

    <br><br>
    
    @ViewBag.Message


}

<script>
    $("#customerlist").val(@customerid);
</script>