@model JobsV1.Models.JobMain

@{
    ViewBag.Title = "Proforma Invoice";
    IEnumerable<JobsV1.Models.JobServices> services = ViewBag.Services;
    IEnumerable<JobsV1.Models.JobItinerary> itineraries = ViewBag.Itinerary;
    IEnumerable<JobsV1.Models.JobNote> jNotes = ViewBag.jNotes;
    IEnumerable<JobsV1.Models.JobPayment> payments = ViewBag.Payments;

    decimal dContractAmt = 0;
    decimal dQuotedAmt = 0;
    decimal dPaidAmt = 0;

    string sDocTitle = "";

    if (Model.JobStatusId == 1)
    {
        sDocTitle = "PROFORMA";
    }
    if (Model.JobStatusId == 2)
    {
        sDocTitle = "INVOICE";
    }
    if (Model.JobStatusId == 3)
    {
        sDocTitle = "INVOICE";
    }
    if (Model.JobStatusId == 4)
    {
        sDocTitle = "INVOICE";
    }

}


<table>
    <tr>
        <td valign="top">
            <img src="~/Images/@ViewBag.sLogo" width="135" />
        </td>
        <td>
            <span style="font:bold 21px arial, verdana;">@ViewBag.sCompany</span>
            <span style="font:12px arial, verdana;color:royalblue">
                <br />@ViewBag.sLine1
                <br />@ViewBag.sLine2
                <br />@ViewBag.sLine3
                <br />@ViewBag.sLine4
                </span>
</td>
    </tr>
</table>
<hr />

<h2>@sDocTitle</h2>

<table>
    <tr>
        <th>
            Job Ref #
        </th>
        <td>
            @Html.DisplayFor(model => model.Id)
        </td>
    </tr>
    <tr>
        <th>
            Date
        </th>
        <td>
            @Model.JobDate.ToString("MMM dd yyyy")
        </td>
    </tr>
    <tr>
        <th valign="top">
            Account
        </th>
        <td>
            @Html.DisplayFor(model => model.Description)
            <br />@Html.DisplayFor(model => model.Customer.Name)
            <br />Pax: @Html.DisplayFor(model => model.NoOfPax) | Days: @Html.DisplayFor(model => model.NoOfDays)
            | Remarks: @Html.DisplayFor(model => model.JobRemarks)
        </td>
    </tr>
</table>


<h3>Services</h3>
<table class="table">
    <tr>
        <th>
            Type
        </th>
        <th>
            Particulars
        </th>
        <th>Amount</th>
    </tr>
    @foreach (var item in services)
    {
        dContractAmt += (item.SupplierAmt == null ? 0 : (decimal)item.SupplierAmt);
        dQuotedAmt += (item.SupplierAmt == null ? 0 : (decimal)item.QuotedAmt);
        JobsV1.Models.JobServicePickup pickup = item.JobServicePickups.FirstOrDefault(); 

        <tr>
            <td style="white-space:nowrap">
                @Html.DisplayFor(modelItem => item.Service.Name)

                @{ 
                    string sStart = ((DateTime)item.DtStart).ToString("MMM-dd-yyyy (ddd)");
                    string sEnd = ((DateTime)item.DtEnd).ToString("MMM-dd-yyyy (ddd)");
                }
                <p>
                    Start: @sStart
                    <br />
                    End: @sEnd
                </p>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Particulars)
                <br />Item: @Html.DisplayFor(modelItem => item.SupplierItem.Description)
                <br />Remarks: @Html.DisplayFor(modelItem => item.Remarks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuotedAmt)
            </td>
        </tr>
    }

</table>

@if (payments.Count() > 0)
{
<h3>Payments</h3>
<table class="table">
    <tr>
        <th>
            Amount
        </th>
        <th>
            Particulars
        </th>
    </tr>

    @foreach (var item in payments)
    {
        dPaidAmt += item.PaymentAmt; 
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentAmt)
            </td>
            <td>
                @item.DtPayment.ToShortDateString()
                &nbsp;[@Html.DisplayFor(modelItem => item.Bank.BankName)
                &nbsp;@Html.DisplayFor(modelItem => item.Remarks)]
            </td>
        </tr>
    }

</table>
}


<div class="jumbotron" >
       
    <table style="width: 100%; table-layout: auto; ">
        <tr>
            <td style="width:70%;padding:10px;">

                <div >
                    <h2>Summary</h2>
                    @*Expenses: @dContractAmt*@
                    <table>
                        <tr>
                            <td>Total Due:</td>
                            <td align="right">@dQuotedAmt.ToString("##,###.00")</td>
                        </tr>
                        @if (Model.JobStatusId == 2 || Model.JobStatusId == 3 || Model.JobStatusId == 4)
                            {
                            <tr>
                                <td>Partial:</td>
                                <td align="right">@dPaidAmt.ToString("##,###.00")</td>
                            </tr>
                            <tr>
                                <td>Balance:</td>
                                @{  Decimal dBalance = (dQuotedAmt - dPaidAmt); }
                                <td align="right">@dBalance.ToString("##,###.00")</td>
                            </tr>
                             }
                    </table>
                </div>
            </td>

            <td style="width:30%;">
                <div style="font:normal 14px arial,verdana;border:1px dotted black; padding:15px;">
                    <p><b>For Payment</b></p>
                    <p>
                        @ViewBag.BankName
                        ( @ViewBag.BankBranch )
                    </p>
                    <p>Account: @ViewBag.AccName</p>
                    <p style="font-weight:bold;">Account No.: @ViewBag.AccNum</p>

                    <p style="margin:20px;text-align:center;"> Or </p>

                    <div id="paypal-button" ></div>
                </div>
            </td>

        </tr>
    </table>
</div>


<div class="col-lg-12">
    <p>
        @*Expenses: @dContractAmt*@
        <table>
            <tr>
                <td style="vertical-align:bottom;">Prepared By:</td>
                <td><br /><br /><u style="font-size:large;vertical-align:bottom;">    Elvie S. Salvatierra        </u></td>
            </tr>
            <tr>
                <td style="vertical-align:bottom;">Signature:</td>
                <td><br /><img src="~/Images/Signature-1.png" width="60px;" /></td>
            </tr>
            <tr>
                <td style="vertical-align:bottom;">Date:</td>
                <td><br /><u style="font-size:large;vertical-align:bottom;"> @System.DateTime.Now.ToString("MMM dd, yyyy") </u></td>
            </tr>
            <tr><td colspan="2">&nbsp;</td></tr>

        </table>
    </p>
</div>
<br />


<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script>

    var today = new Date().toLocaleString();

    if("@ViewBag.isPaymentValid" == "True" ) {
    
        alert("Notice, online payment has been disable. For Payment transactions, please call (+63)9330895358  or (+63)9167558473");
    
    }else{

        var count = 0;
        paypal.Button.render({
            // Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AeKvfmAZjDaTJ4bH4PFGurLMvFZOl9OeHaK6xUlSCB0Ny8RU2WEeijZLTeRGvz0GjQXrX1SuaYvf53-H',
                production: 'demo_production_client_id'
            },
            // Customize button (optional)
            locale: 'en_US',
            style: {
                label: 'pay',
                size: 'medium',
                color: 'blue',
                shape: 'pill',
            },

            // Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: '@dQuotedAmt.ToString("##,###.00")',
                            currency: 'PHP',
                            details: {
                                subtotal: '@dQuotedAmt.ToString("##,###.00")',
                                tax: '0.00'
                                //shipping: '0.01',
                                //handling_fee: '1.00',
                                //shipping_discount: '0.00',
                                //insurance: '0.00'
                            }
                        },
                        description: 'RealWheels Car Rental.',
                        custom: @Model.Id,// Insert a unique invoice number
                        invoice_number: @Model.Id,// Insert a unique invoice number
                        payment_options: {
                            allowed_payment_method: 'INSTANT_FUNDING_SOURCE'
                        },
                        soft_descriptor: 'Reservation Job Id: @Model.Id',
                        item_list: {

                            //item list
                            items: [
                                @foreach (var item in services)
                                {
                                    if (services.Last().Id != item.Id)
                                    {
                                        <text>
                                        {
                                            name: '@item.Particulars',
                                            description: 'Unit: @item.SupplierItem.Description',
                                            quantity: '1',
                                            price: '@item.QuotedAmt.00',
                                            tax: '0.00',
                                            currency: 'PHP'
                                        },
                                        </text>
                                    }else {   //last item
                                        <text>
                                        {
                                            name: '@item.Particulars',
                                            description: 'Unit: @item.SupplierItem.Description',
                                            quantity: '1',
                                            price: '@item.QuotedAmt.00',
                                            tax: '0.00',
                                            currency: 'PHP'
                                        }
                                        </text>

                                    }
                                }
                            ]
                        }
                    }]
                });
            },
            // Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute()
                .then(function (response) {
                    // Show a confirmation message to the buyer
                    window.alert('Thank you for your purchase! ' + response["cart"] );

                    console.log(data);
                    console.log(response);
                    window.location.href = '@Url.Action("SendEmail", "JobOrder", new{ jobId = Model.Id, mailType = "PAYMENT-PENDING" })'
                });
            }
        }, '#paypal-button');
    
    }//end of else
      
</script>
